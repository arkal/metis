#!/usr/bin/env ruby

require 'json'
require 'fileutils'

def download_file(output_path, file)
  FileUtils::mkdir_p(output_path)

  `wget -c -O "#{output_path}/#{file[:file_name]}" -q --show-progress --header="Authorization: Etna #{ENV['TOKEN']}" "#{file[:download_url]}"`
end

def download_folder(host, project, folder_path, output_path)
  response = `wget -q -O - --header="Authorization: Etna #{ENV['TOKEN']}" "https://#{host}/#{project}/list/#{folder_path}"`
  abort "Could not retrieve folder #{folder_path}" unless $?.success?

  folder = JSON.parse(response, symbolize_names: true)

  folder[:files].each do |file|
    download_file(output_path, file)
  end

  folder[:folders].each do |sub_folder|
    download_folder(host, project, ::File.join(sub_folder[:bucket_name], sub_folder[:folder_path]), ::File.join(output_path, sub_folder[:folder_name]))
  end
end

abort 'No environment variable TOKEN is set' if !ENV['TOKEN']

USAGE=<<EOT
Recursively download a folder from Metis
Usage: metis_get <host> <project> <folder_path> <output_path>  # e.g. metis_get metis.etna-development.org labors /files/my_folder output
EOT
abort USAGE if ARGV.length != 4

download_folder(*ARGV)
